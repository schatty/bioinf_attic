def pattern_count(source_text, pattern):
    """
    Count number of occurences of pattern in source_text.
    """
    return sum((source_text[i:i+len(pattern)] == pattern
        for i in range(len(source_text) - len(pattern) + 1)))

def frequent_words(st, k):
    """
    Fount most frequent words of length k in the given string.
    """
    counts = [pattern_count(st, st[i:i+k]) for i in range(len(st) - k + 1)]
    max_count = max(counts)
    frequent_patterns = []
    for i in range(len(counts)):
        if counts[i] == max_count and st[i:i+k] not in frequent_patterns:
            frequent_patterns.append(st[i:i+k])
    return frequent_patterns

if __name__ == "__main__":
    # (1) Test pattern_count
    source_text = "TGTCCGATGAATGATGAATGATGAATCAGATGAATGATGAATGATGAATGCGAGATGAATGCGATGAATGATGAATGATGAATCGGATGAATGATGAATTGATGAATGAAGGATGAATCCGATGAATGGCTGTTTCGATGAATCGAGATGAATCCGATGAATGATGAATGTTTAAACTCCGGTGATGAATAGATGAATGGAAGATGAATTGATGAATTAGGATGAATGATGAATGGCCGGATGAATCGCCGGATGAATCAGCACCGATGAATAGATGAATGGATCTAGGTCAGGGATGAATCTGATGAATAGATGAATGATGAATGATGAATGATGAATCCGAGATGAATGACGGATGAATAGATGAATAGATGAATTGATGAATGGTATACAGATGAATCCCTGATGAATGATGAATAAAAGATGAATGATGAATGCGTCGATGAATTGATGAATGATGAATAGATGAATGATGAATGATGAATGATGAATGGATGAATAAGATGAATGATGAATACAGGTGGATGAATGAGATGAATTGATGAATGGTCATTGAAGTGCAGATGAATGATGAATCTGCTTGATGAATCGGTCCGGATGAATCCGGATGAATGATGAATGAGATGAATGATGAATCGATGAATGGTGATGAATCGATGAATTTGATGAATAGATGAATGATGATGAATGATGAATGGCGAAGTCAGATGAATAGATGAATGATGAATTAGGTAGATGAATTGTCGATGAATAGATGAATGATGAATGATGAATCCCTCTTTCGTGATGAATGTGTAAGGCAGATGAATGAGCGATGAATGATGAATGATGAATGATGAATCTAGATGAATCGATGAATGAAGATGAATTATAGATGAATGCGATGAATTTCAGATGAATGATGAATCGAGATGAATAGATGAATAACGGATGAATGATCGCGATGAATGATGAATCAGATGAATTGTTGATGAATGAGATGATGAAT"
    pattern = "GATGAATGA"
    #print(pattern_count(source_text, pattern))

    # (2) Test frequent words
    source_text = "GGAAAATCATGTTAATCCGCACGGTCTTGTTAATCCGCGGAAAATCATCTACGCTAACGAGAGTCTCCGAGAGTCTCCTACGCTAACTACGCTAACTACGCTAAACGGTCTTACGGTCTTCTACGCTAAGTTAATCCGCCTACGCTAACTACGCTAAGTTAATCCGCCGAGAGTCTCGTTAATCCGCGTTAATCCGCCGAGAGTCTCGGAAAATCATGGAAAATCATACGGTCTTACGGTCTTCGAGAGTCTCGTTAATCCGCCTACGCTAAGGAAAATCATGTTAATCCGCACGGTCTTCTACGCTAAGGAAAATCATGTTAATCCGCCTACGCTAACTACGCTAAGGAAAATCATGTTAATCCGCGGAAAATCATGGAAAATCATCGAGAGTCTCCGAGAGTCTCGGAAAATCATCGAGAGTCTCGGAAAATCATGGAAAATCATACGGTCTTGGAAAATCATGTTAATCCGCACGGTCTTGGAAAATCATGTTAATCCGCCGAGAGTCTCCTACGCTAAACGGTCTTGTTAATCCGCCTACGCTAACTACGCTAAACGGTCTTACGGTCTTACGGTCTTCGAGAGTCTCCTACGCTAAACGGTCTTGGAAAATCATGTTAATCCGCCTACGCTAAACGGTCTTACGGTCTTACGGTCTTCGAGAGTCTCGTTAATCCGCCTACGCTAAACGGTCTTGTTAATCCGCGGAAAATCATCTACGCTAAGTTAATCCGCGGAAAATCATCTACGCTAACTACGCTAAGGAAAATCATCGAGAGTCTCGTTAATCCGCACGGTCTTGGAAAATCATGGAAAATCATGGAAAATCATCGAGAGTCTCGGAAAATCATGGAAAATCATCGAGAGTCTCGGAAAATCATGGAAAATCATGGAAAATCATGGAAAATCATCTACGCTAAGTTAATCCGCGGAAAATCATACGGTCTTACGGTCTTACGGTCTT"
    k = 11
    print(frequent_words(source_text, k))
